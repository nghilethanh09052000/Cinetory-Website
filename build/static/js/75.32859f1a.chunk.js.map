{"version":3,"file":"static/js/75.32859f1a.chunk.js","mappings":"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","sources":["Utils/Assets.js","Utils/checkValue.js","Utils/index.js","pages/Contact/Component/ContactItem.jsx","pages/Contact/Component/ContactForm.jsx","pages/Contact/Contact.jsx","styles/customTransition.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport const getUrl = (path) =>{\r\n    let PUBLIC_URL = `${process.env.PUBLIC_URL}`\r\n    if(path.startsWith(`${PUBLIC_URL}/`))\r\n    {\r\n     \r\n        path = path.slice(PUBLIC_URL.length+1)\r\n    }\r\n    let finalPath = path.startsWith('/') \r\n        ? `${PUBLIC_URL}${path}`\r\n        : `${PUBLIC_URL}${path}`\r\n    return finalPath\r\n}\r\n\r\nexport const getImageUrl = (asset) =>\r\n{\r\n    return getUrl('/images/Quan/'+ asset)\r\n}\r\n\r\nexport const getImageCategoryUrl = (asset) =>\r\n{\r\n    return getUrl('/images/Category/'+ asset)\r\n}","var validator = require(\"email-validator\");\r\n \r\n\r\nexport const checkValue = (type,value) =>{\r\n    switch(type){\r\n        case 'name':\r\n            let regex = /^([a-zA-Z ]){0,30}$/\r\n            if(regex.test(value)){\r\n                return {\r\n                    type:type,\r\n                    error:false\r\n                }\r\n            }\r\n            else\r\n            {\r\n                return {\r\n                    type:type,\r\n                    error:true\r\n                }\r\n            }\r\n        case 'email':\r\n            let emailCheck = validator.validate(value) \r\n            if(emailCheck){\r\n                return {\r\n                    type:type,\r\n                    error:false\r\n                }\r\n            }\r\n            else\r\n            {\r\n                return {\r\n                    type:type,\r\n                    error:true\r\n                }\r\n            }\r\n        default:\r\n            return false\r\n    }\r\n}","import * as Assets from './Assets'\r\nimport * as checkValue from './checkValue'\r\n\r\nconst Utils = {\r\n    getUrl: Assets.getUrl,\r\n    getImageUrl: Assets.getImageUrl,\r\n    checkValue:checkValue.checkValue\r\n}\r\nexport default Utils","import {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nconst ContactItem = ({contact }) => {\r\n    const { icon,content, info }=contact\r\n  \r\n    return (\r\n        <Grid item md={3} xs={6}>\r\n            <Avatar\r\n                sx={{ width: 60, height: 60,bgcolor:\"#fff\" }}\r\n            >\r\n                {icon}\r\n            </Avatar>\r\n            <div style={{marginTop:'5px'}}>\r\n                <Typography variant=\"h5\">\r\n                    {content}\r\n                </Typography>\r\n                <Typography \r\n                >\r\n                    {info}\r\n                </Typography>\r\n            </div>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default ContactItem;\r\n","import AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport Utils from '../../../Utils';\r\n\r\nimport { Box,\r\n        Grid,\r\n        Typography,\r\n        Paper,\r\n        Card,\r\n        CardMedia,\r\n        CardContent,\r\n        Avatar,\r\n        FormControl,\r\n        InputLabel,\r\n        Input,\r\n        InputAdornment,\r\n        TextField,\r\n        Button,\r\n\r\n} \r\nfrom \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useState } from 'react';\r\nconst ContactForm = () => {\r\n    const { t } = useTranslation()\r\n\r\n    const [name,setName] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [message,setMessage] = useState('')\r\n    const [error , setError] = useState(false)\r\n    const handleValueChange = (e,type) =>{\r\n        let check\r\n        switch(type){\r\n            case 'name': \r\n                setName(e.target.value)\r\n                check = Utils.checkValue(type,e.target.value)\r\n                setError(check)\r\n                break;\r\n            case 'email': \r\n                setEmail(e.target.value)\r\n                check = Utils.checkValue(type,e.target.value)\r\n                setError(check)\r\n                break;\r\n            case 'message': \r\n                setMessage(e.target.value)\r\n                check = Utils.checkValue(type,e.target.value)\r\n                setError(check)\r\n                break;\r\n            default: \r\n                return ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box style={{marginTop:'20px'}}>\r\n            <Grid \r\n                container \r\n                rowSpacing={2} \r\n                columnSpacing={{md:6,xs:2}} \r\n            >\r\n                <Grid item md={6} xs={12}>\r\n                    <FormControl \r\n                        variant=\"standard\"\r\n                        focused={name==='' ? true : false}\r\n                        required={true}\r\n                        error={error.type==='name' && error.error }\r\n                        >\r\n                        <InputLabel htmlFor=\"name\">\r\n                            {t(\"Contact.FullName\")}\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"input-with-icon-adornment\"\r\n                            onChange={(e,name)=>handleValueChange(e,'name')}\r\n                            startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <AccountCircle />\r\n                            </InputAdornment>\r\n                        }\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                    <FormControl \r\n                        variant=\"standard\"\r\n                        required={true}\r\n                        focused={name.length >0 && error.error=== false ? true : false}\r\n                        error={error.type==='email' && error.error}\r\n                        disabled={\r\n                            (name.length <=0 || (error.type==='name' && error.error === true ))\r\n                            ? true\r\n                            : false\r\n                            }\r\n                    >\r\n                        <InputLabel htmlFor=\"email\">\r\n                        {t(\"Contact.CustomerEmail\")}\r\n                        </InputLabel>\r\n                        <Input\r\n                        id=\"input-with-icon-adornment\"\r\n                        onChange={(e,name)=>handleValueChange(e,'email')}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <AccountCircle />\r\n                            </InputAdornment>\r\n                        }\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item md={12}>\r\n                    <TextField\r\n                        label={t(\"Contact.Message\")}\r\n                        multiline\r\n                        rows={3}\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        disabled={\r\n                            email.length <=0 || (error.type==='name') || (error.type==='email' && error.error===true)\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        onChange={(e,name)=>handleValueChange(e,'message')}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={12}>\r\n                    <Button\r\n                       variant=\"contained\"\r\n                    >\r\n                        ClicK\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        \r\n        </Box>\r\n      );\r\n}\r\n \r\nexport default ContactForm;","import { motion } from \"framer-motion\"\r\nimport customTransition from \"../../styles/customTransition\";\r\nimport customStyles from \"../../styles/customStyles\";\r\nimport Utils from \"../../Utils\";\r\nimport { Box,\r\n        Grid,\r\n        Typography,\r\n        Paper,\r\n        Card,\r\n        CardMedia,\r\n        CardContent,\r\n        Avatar,\r\n        FormControl,\r\n        InputLabel,\r\n        Input,\r\n        InputAdornment,\r\n\r\n} \r\nfrom \"@mui/material\";\r\nimport { useState} from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PhoneInTalkIcon from '@mui/icons-material/PhoneInTalk';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport InstagramIcon from '@mui/icons-material/Instagram';\r\n\r\n\r\n\r\nimport ContactItem from \"./Component/ContactItem\";\r\nimport ContactForm from \"./Component/ContactForm\";\r\n\r\nconst Contact = () => {\r\n    const { t } = useTranslation();\r\n    const contacts =[\r\n        {\r\n            icon:<PhoneInTalkIcon sx={{...customStyles().iconColor}}/>,\r\n            content:t(\"Contact.Phone\"),\r\n            info: `+`+t(\"Contact.Phone_Name\")\r\n        },\r\n        {\r\n            icon:<EmailIcon sx={{...customStyles().iconColor}} />,\r\n            content:t(\"Contact.Email\"),\r\n            info:t(\"Contact.Email_Name\")\r\n        },\r\n        {\r\n            icon:<FacebookIcon sx={{...customStyles().iconColor}}/>,\r\n            content:t(\"Contact.Facebook\"),\r\n            info:t(\"Contact.Facebook_Name\")\r\n        },\r\n        {\r\n            icon:<InstagramIcon sx={{...customStyles().iconColor}}/>,\r\n            content:t(\"Contact.Instagram\"),\r\n            info:t(\"Contact.Instagram_Name\")\r\n        }\r\n    ]\r\n    return (\r\n        <motion.div \r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            variants={customTransition.variant} \r\n        >\r\n              <img \r\n                    src={`${Utils.getImageUrl('Contact.jpg')}`}\r\n                    alt=\"\" \r\n                    style={\r\n                       customStyles().backgroundMenu\r\n                    }\r\n                />\r\n                <div\r\n                    style={{\r\n                        ...customStyles().divCenter,\r\n                        zIndex:'1000'\r\n                    }}\r\n                >\r\n                    <Box sx={{ width: '100%'}}>\r\n                        <Box>\r\n                            <Typography\r\n                               variant=\"h5\"\r\n                               noWrap\r\n                               sx={{\r\n                                 flexGrow: 1,\r\n                                 fontFamily: \"monospace\",\r\n                                 fontWeight: 700,\r\n                                 letterSpacing: \".3rem\",\r\n                                 color: \"#fff\",\r\n                                 textDecoration: \"none\",\r\n                               }}\r\n                            >\r\n                                {t(\"Contact.Contact\")}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Card sx={{bgcolor:'#fff'}}>\r\n                            <Grid \r\n                                container \r\n                                rowSpacing={2} \r\n                                columnSpacing={{md:6,xs:2}} \r\n                            >\r\n                               {\r\n                               contacts.map( (contact,index) =>(\r\n                                    <ContactItem\r\n                                        key={index}\r\n                                        contact={contact}\r\n                                   />    \r\n                                          \r\n                               ))\r\n                            }\r\n                            </Grid>\r\n                            <ContactForm/>\r\n                        </Card>\r\n                        \r\n                    </Box>\r\n\r\n                </div>\r\n\r\n        </motion.div>\r\n     );\r\n}\r\n \r\nexport default Contact;","const customTransition ={\r\n    variant:{\r\n        hidden: { \r\n            opacity: 0 \r\n        },\r\n        visible: {\r\n             opacity: 1 \r\n        },\r\n    }\r\n  \r\n}\r\n\r\nexport default customTransition;"],"names":["getUrl","path","PUBLIC_URL","process","startsWith","slice","length","validator","require","Assets","getImageUrl","asset","checkValue","type","value","test","error","validate","contact","icon","content","info","Grid","item","md","xs","Avatar","sx","width","height","bgcolor","style","marginTop","Typography","variant","t","useTranslation","useState","name","setName","email","setEmail","setMessage","setError","handleValueChange","e","check","target","Utils","Box","container","rowSpacing","columnSpacing","FormControl","focused","required","InputLabel","htmlFor","Input","id","onChange","startAdornment","InputAdornment","position","AccountCircle","disabled","TextField","label","multiline","rows","fullWidth","Button","contacts","PhoneInTalk","customStyles","iconColor","Email","Facebook","Instagram","motion","initial","animate","variants","customTransition","src","alt","backgroundMenu","divCenter","zIndex","noWrap","flexGrow","fontFamily","fontWeight","letterSpacing","color","textDecoration","Card","map","index","hidden","opacity","visible"],"sourceRoot":""}